{"remainingRequest":"E:\\vuepress-blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vuepress-blog\\node_modules\\vuepress-theme-antdocs\\components\\PageNav.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"E:\\vuepress-blog\\node_modules\\vuepress-theme-antdocs\\components\\PageNav.vue","mtime":1644580888125},{"path":"E:\\vuepress-blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":1644580884667},{"path":"E:\\vuepress-blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1644580887983},{"path":"E:\\vuepress-blog\\node_modules\\postcss-loader\\src\\index.js","mtime":1644580886754},{"path":"E:\\vuepress-blog\\node_modules\\less-loader\\dist\\cjs.js","mtime":1644580885979},{"path":"E:\\vuepress-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644580883907},{"path":"E:\\vuepress-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1644580887982}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICcuLi9zdHlsZXMvcGFsZXR0ZS5sZXNzJzsNCkBpbXBvcnQgJy4uL3N0eWxlcy93cmFwcGVyLmxlc3MnOw0KLnBhZ2UtbmF2IHsNCiAgLy8gQGV4dGVuZCAkd3JhcHBlcjsNCiAgJiB7DQogICAgLndyYXBwZXI7DQogIH0NCiAgDQogIHBhZGRpbmctdG9wOiAxcmVtOw0KICBwYWRkaW5nLWJvdHRvbTogMDsNCg0KICAuaW5uZXIgew0KICAgIG1pbi1oZWlnaHQ6IDJyZW07DQogICAgbWFyZ2luLXRvcDogMDsNCiAgICBib3JkZXItdG9wOiAxcHggc29saWQgQGJvcmRlckNvbG9yOw0KICAgIHBhZGRpbmctdG9wOiAxLjc1cmVtOw0KICAgIG92ZXJmbG93OiBhdXRvOyAvLyBjbGVhciBmbG9hdA0KICB9DQoNCiAgLm5leHQgew0KICAgIGZsb2F0OiByaWdodDsNCiAgfQ0KfQ0K"},{"version":3,"sources":["PageNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PageNav.vue","sourceRoot":"node_modules/vuepress-theme-antdocs/components","sourcesContent":["<template>\r\n  <div v-if=\"prev || next\" class=\"page-nav\">\r\n    <p class=\"inner\">\r\n      <span v-if=\"prev\" class=\"prev\">\r\n        <a v-if=\"prev.type === 'external'\" class=\"prev\" :href=\"prev.path\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {{ prev.title || prev.path }}\r\n\r\n          <OutboundLink />\r\n        </a>\r\n\r\n        <RouterLink v-else class=\"prev\" :to=\"prev.path\">\r\n          <a-icon type=\"left\" />\r\n          {{ prev.title || prev.path }}\r\n        </RouterLink>\r\n      </span>\r\n\r\n      <span v-if=\"next\" class=\"next\">\r\n        <a v-if=\"next.type === 'external'\" :href=\"next.path\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {{ next.title || next.path }}\r\n\r\n          <OutboundLink />\r\n        </a>\r\n\r\n        <RouterLink v-else :to=\"next.path\">\r\n          {{ next.title || next.path }}\r\n          <a-icon type=\"right\" />\r\n        </RouterLink>\r\n      </span>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { resolvePage } from '../util'\r\nimport isString from 'lodash/isString'\r\nimport isNil from 'lodash/isNil'\r\n\r\nexport default {\r\n  name: 'PageNav',\r\n\r\n  props: ['sidebarItems'],\r\n\r\n  computed: {\r\n    prev() {\r\n      return resolvePageLink(LINK_TYPES.PREV, this)\r\n    },\r\n\r\n    next() {\r\n      return resolvePageLink(LINK_TYPES.NEXT, this)\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolvePrev(page, items) {\r\n  return find(page, items, -1)\r\n}\r\n\r\nfunction resolveNext(page, items) {\r\n  return find(page, items, 1)\r\n}\r\n\r\nconst LINK_TYPES = {\r\n  NEXT: {\r\n    resolveLink: resolveNext,\r\n    getThemeLinkConfig: ({ nextLinks }) => nextLinks,\r\n    getPageLinkConfig: ({ frontmatter }) => frontmatter.next\r\n  },\r\n  PREV: {\r\n    resolveLink: resolvePrev,\r\n    getThemeLinkConfig: ({ prevLinks }) => prevLinks,\r\n    getPageLinkConfig: ({ frontmatter }) => frontmatter.prev\r\n  }\r\n}\r\n\r\nfunction resolvePageLink(linkType, { $themeConfig, $page, $route, $site, sidebarItems }) {\r\n  const { resolveLink, getThemeLinkConfig, getPageLinkConfig } = linkType\r\n\r\n  // Get link config from theme\r\n  const themeLinkConfig = getThemeLinkConfig($themeConfig)\r\n\r\n  // Get link config from current page\r\n  const pageLinkConfig = getPageLinkConfig($page)\r\n\r\n  // Page link config will overwrite global theme link config if defined\r\n  const link = isNil(pageLinkConfig) ? themeLinkConfig : pageLinkConfig\r\n\r\n  if (link === false) {\r\n    return\r\n  } else if (isString(link)) {\r\n    return resolvePage($site.pages, link, $route.path)\r\n  } else {\r\n    return resolveLink($page, sidebarItems)\r\n  }\r\n}\r\n\r\nfunction find(page, items, offset) {\r\n  const res = []\r\n  flatten(items, res)\r\n  for (let i = 0; i < res.length; i++) {\r\n    const cur = res[i]\r\n    if (cur.type === 'page' && cur.path === decodeURIComponent(page.path)) {\r\n      return res[i + offset]\r\n    }\r\n  }\r\n}\r\n\r\nfunction flatten(items, res) {\r\n  for (let i = 0, l = items.length; i < l; i++) {\r\n    if (items[i].type === 'group') {\r\n      flatten(items[i].children || [], res)\r\n    } else {\r\n      res.push(items[i])\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@import '../styles/palette.less';\r\n@import '../styles/wrapper.less';\r\n.page-nav {\r\n  // @extend $wrapper;\r\n  & {\r\n    .wrapper;\r\n  }\r\n  \r\n  padding-top: 1rem;\r\n  padding-bottom: 0;\r\n\r\n  .inner {\r\n    min-height: 2rem;\r\n    margin-top: 0;\r\n    border-top: 1px solid @borderColor;\r\n    padding-top: 1.75rem;\r\n    overflow: auto; // clear float\r\n  }\r\n\r\n  .next {\r\n    float: right;\r\n  }\r\n}\r\n</style>\r\n"]}]}